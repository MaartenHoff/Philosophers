// Plan für die nächsten Tage:

5. **sim stop when one philo is Dead
   - grim reaper thread erstellen
   - check wie der scheiss funktioniert

6. **Threads und Synchronisation:**
   - Sicherstellen, dass die Philosophen-Threads richtig gestartet, verbunden (`pthread_join`) und getrennt (`pthread_detach`) werden.
   - Korrekte Handhabung der Threads bei Beendigung.

7. **Fehlerbehandlung:**
   - Fehlerprüfung für alle `pthread_*`-Funktionen (Erstellung, Zerstörung, Lock/Unlock).
   - Rückgabewerte bei Fehlern (z.B. `ERR_MUTEX` für Mutex-Probleme).

8. **Letzte Tests:**
   - Vollständige Simulation mit verschiedenen Anzahl Philosophen und maximaler Simulationszeit.
   - Performance-Messungen und Vermeidung von Deadlocks.
   - Valgrind-Tests für Speicherlecks.

9. **Abschließende Bereinigungen:**
   - Alle `malloc`-Allokationen sollten am Ende der Simulation freigegeben werden.
   - Sicherstellen, dass alle Threads und Mutexes korrekt beendet und freigegeben werden.

10. **Abschluss:**
   - Funktionalität und Normkonformität testen.
   - Überprüfung von möglichen Optimierungen (z.B. Effizienz der Mutex-Logik).
